@model Wasit.Services.ViewModels.Estates.MyEstates.UpdateRentEstateViewModel

@{
    ViewData["Title"] = "تعديل عقار";
    ViewData["Label"] = "قيمة الايجار";
}

<style>
    <link href="https://cdn.datatables.net/v/bs5/jq-3.7.0/dt-2.0.8/cr-2.0.3/date-1.5.2/fh-4.0.1/r-3.0.2/datatables.min.css" rel="stylesheet" >
</style>

<div class="add-state" method="post" enctype="multipart/form-data">
    <p class="p-color font-small mb-4 font-gray title">الرجاء املئ البيانات التالية</p>

    <div class="col mb-2">
        <label asp-for="Name" class="input-label">اسم العقار</label>
        <input asp-for="Name" value="@Model.Name" placeholder="اسم العقار" class="site-input">
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <label for="EstateTypeId" class="input-label">نوع العقار</label>
    <div class="row gap-1 mb-4">
        <div class="col">
            <select asp-for="EstateTypeId" class="select2" asp-items="ViewBag.EstateTypes">
                <option value="نوع العقار" selected hidden disabled>نوع العقار</option>
            </select>
            <span asp-validation-for="EstateTypeId" class="text-danger"></span>
        </div>
    </div>

    <label for="addresss" class="input-label">العنوان</label>
    <div class="row gap-1 mb-4">
        <div class="col" id="addresss">
            <select asp-for="CityId" class="select2" asp-items="ViewBag.Cities">
                <option value="المدينة" selected hidden disabled>المدينة</option>
            </select>
            <span asp-validation-for="CityId" class="text-danger"></span>
        </div>
        <div class="col">
            <select asp-for="RegionId" class="select2" asp-items="ViewBag.Regions">
                <option value="الحي" selected hidden disabled>الحى</option>
            </select>
            <span asp-validation-for="RegionId" class="text-danger"></span>
        </div>
    </div>

    <div class="col mb-3">
        <label asp-for="Location" class="input-label">الموقع</label>
        <input asp-for="Location" type="text" value="@Model.Location" data-bs-toggle="modal" data-bs-target="#mapModal" class="site-input" readonly id="location"
               placeholder="يرجي تحديد العنوان علي الخريطة" />
        <input type="hidden" value="@Model.Lat" id="Lat" name="Lat" />
        <input type="hidden" value="@Model.Lng" id="Lng" name="Lng" />
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>

    <div class="col mb-3">
        <label asp-for="Area" class="input-label">مساحة العقار</label>
        <input type="text" asp-for="Area" value="@Model.Area" placeholder="مساحة العقار" class="site-input">
        <span asp-validation-for="Area" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <label asp-for="IsDevelopable" class="input-label">قابلية العقار للتطوير</label>
        <select asp-for="IsDevelopable" class="select2">
            <option value="" selected hidden disabled>قابلية العقار للتطوير</option>
            @if (Model.IsDevelopable)
            {
                <option selected value="true">نعم</option>
                <option value="false">لا</option>
            }
            else
            {
                <option value="true">نعم</option>
                <option selected value="false">لا</option>
            }
        </select>
        <span asp-validation-for="IsDevelopable" class="text-danger"></span>
    </div>

    <div class="col mb-3">
        <label asp-for="Description" class="input-label">وصف العقار</label>
        <textarea rows="5" asp-for="Description" placeholder="وصف العقار" class="site-input">@Model.Description</textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="col mb-3">
        <label asp-for="Features" class="input-label">مميزات العقار</label>
        <textarea rows="5" asp-for="Features" placeholder="مميزات العقار" class="site-input">@Model.Features</textarea>
        <span asp-validation-for="Features" class="text-danger"></span>
    </div>

    <div class="price-input mb-3">
        <label asp-for="Price" class="input-label">@ViewData["Label"]</label>
        <input asp-for="Price" value="@Model.Price" placeholder="@ViewData["Label"]" class="site-input">
        <p class="rs">RS</p>
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Images" class="input-label">صور العقار</label>
        <div class="form-group custom-img-upload mb-3">
            <div class="profile-img-upload-2">
                <input asp-for="Images" type="file" accept="image/*" multiple class="d-none upload-input">
                <div class="img-preview img d-flex align-items-center flex-wrap">
                    <label asp-for="Images" class="multiple-upload w-100">
                        <span class="dn-input"></span>
                        <div class="up-img site-input d-flex justify-content-between cursor-p">
                            <p class="font-xs font-gray"> إرفق صور العقار هنا</p>
                            <img src="~/imgs/noun_upload.png" alt="camera-img">
                        </div>
                    </label>
                </div>
                <span asp-validation-for="Images" class="text-danger"></span>
            </div>
        </div>
    </div>
    <button id="submit-btn" type="submit" onclick="SubmitData(this)" class="secondary-btn w-100 py-3">حفظ - التالي</button>
</div>


<!-- start map modal -->
<div class="modal fade" tabindex="-1" id="mapModal" aria-labelledby="staticBackdropLabel" aria-hidden="true"
     data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content text-center p-5">
            <div class="modal-header me-auto">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body justify-content-center d-flex">
                <div class="col-12 relative-parent">
                    <div class="main-input-cont mb-3 map-inp">
                        <div class="current-loc"></div>
                        <input type="hidden" name="lat" id="lat" value="@Model.Lat" />
                        <input type="hidden" name="lng" id="lng" value="@Model.Lng" />
                    </div>
                    <div class="container-map">
                        <div class="main-input-cont mb-3 sear-in">
                            <input type="text" class="site-input" name="location2" id="location2"
                                   placeholder="ابحث هنا" />
                        </div>
                        <div id="map" class="mb-3" style="width: 100%; height: 300px"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer border-0 justify-content-center row">
                <button class="secondary-btn col py-3">استمرار</button>
            </div>
        </div>
    </div>
</div>

<!-- end map modal -->
@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNLoYGrbnQI_GMqHt6m0PSN9yA7Zvq7gA&libraries=places&language=ar"></script>

    <script>
        $(document).ready(function () {
            $('.select2').select2();
            var map, infoWindow;
            var marker;
            var lat = document.getElementById("lat");
            var lng = document.getElementById("lng");
            var location = document.getElementById("location");
            var location2 = document.getElementById("location2");
            var geocoder = new google.maps.Geocoder();
            var infowindow = new google.maps.InfoWindow();

            setTimeout(function () {
                if (document.querySelector(".current-loc")) {

                    console.log('current location is working')

                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(
                            (position) => {
                                const pos = {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude,
                                };

                                console.log(pos)

                                infoWindow.setPosition(pos);
                                infoWindow.setContent("Location found.");
                                infoWindow.open(map);
                                map.setCenter(pos);
                                lat.value = pos.lat;
                                lng.value = pos.lng;
                                initMap();
                                console.log(marker.position.lat());
                                console.log(marker.position.lng());
                                $('#Lat').val(marker.position.lat());
                                $('#Lng').val(marker.position.lng());
                                console.log(pos.lat);
                            },
                            () => {
                                handleLocationError(true, infoWindow, map.getCenter());
                            }
                        );
                    } else {
                        // Browser doesn't support Geolocation
                        handleLocationError(false, infoWindow, map.getCenter());
                        console.log("sssssssssss")
                    }

                }
            }, 500)

            function initMap() {
                var myLatlng = new google.maps.LatLng(lat.value, lng.value);
                var mapOptions = {
                    zoom: 18,
                    center: myLatlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                };

                map = new google.maps.Map(document.getElementById("map"), mapOptions);
                marker = new google.maps.Marker({
                    map: map,
                    position: myLatlng,
                    draggable: true,
                });

                // set current location
                infoWindow = new google.maps.InfoWindow();

                const locationButton = document.createElement("button");
                locationButton.setAttribute("type", "button");
                locationButton.classList.add("up", "default-font");

                locationButton.textContent = "موقعك الحالي";
                locationButton.classList.add("secondary-btn");
                map.controls[google.maps.ControlPosition.TOP_CENTER].push(
                    locationButton
                );
                //test get current location onload

                locationButton.addEventListener("click", () => {
                    // Try HTML5 geolocation.

                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(
                            (position) => {
                                const pos = {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude,
                                };

                                infoWindow.setPosition(pos);
                                infoWindow.setContent("Location found.");
                                infoWindow.open(map);
                                map.setCenter(pos);
                                lat.value = pos.lat;
                                lng.value = pos.lng;
                                initMap();
                                console.log(marker.position.lat());
                                console.log(marker.position.lng());
                                console.log(pos.lat);
                            },
                            () => {
                                handleLocationError(true, infoWindow, map.getCenter());
                            }
                        );
                    } else {
                        // Browser doesn't support Geolocation
                        handleLocationError(false, infoWindow, map.getCenter());
                    }
                });

                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(
                        browserHasGeolocation
                            ? "Error: The Geolocation service failed."
                            : "Error: Your browser doesn't support geolocation."
                    );
                    infoWindow.open(map);
                }
                // end current location code
                // if(document.querySelector('.current-loc') && !document.querySelector('.current-loc')){
                // locationButton.click()
                // }

                geocoder.geocode({ latLng: myLatlng }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            location.value = results[0].formatted_address;
                            lat.value = marker.getPosition().lat();
                            lng.value = marker.getPosition().lng();
                            infowindow.setContent(results[0].formatted_address);
                            infowindow.open(map, marker);
                        }
                    }
                });

                google.maps.event.addListener(marker, "dragend", function () {
                    geocoder.geocode(
                        { latLng: marker.getPosition() },
                        function (results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                if (results[0]) {
                                    location.value = results[0].formatted_address;
                                    lat.value = marker.getPosition().lat();
                                    lng.value = marker.getPosition().lng();
                                    infowindow.setContent(results[0].formatted_address);
                                    infowindow.open(map, marker);


                                }
                            }
                        }
                    );
                });
            }

            function initialize() {
                var input = document.getElementById("location2");
                var autocomplete = new google.maps.places.Autocomplete(
                                                                                                                  /** type {HTMLInputElement} */(input),

                    {
                        types: ["(cities)"],
                    }
                );
                google.maps.event.addListener(
                    autocomplete,
                    "place_changed",
                    function () {
                        var place = autocomplete.getPlace();
                        if (!place.geometry) {
                            return;
                        }
                        lat.value = place.geometry.location.lat();
                        lng.value = place.geometry.location.lng();
                        // initMap();
                        var location = "";
                        if (place.address_components) {
                            location = [
                                (place.address_components[0] &&
                                    place.address_components[0].short_name) ||
                                "",
                                (place.address_components[1] &&
                                    place.address_components[1].short_name) ||
                                "",
                                (place.address_components[2] &&
                                    place.address_components[2].short_name) ||
                                "",
                            ].join(" ");
                        }
                        initMap();

                    }
                );
            }

            google.maps.event.addDomListener(window, "load", initialize);

            google.maps.event.addDomListener(window, "load", initMap);

        });

        $('#CityId').on('change', function () {
            var CityId = $(this).val();
            var regionList = $('#RegionId');
            regionList.empty();

            if (!isNaN(CityId)) {
                regionList.append($('<option>اختر حي</option>'));
                $.ajax({
                    url: `/Estates/GetRegionsByCityId?id=${CityId}`,
                    method: 'GET',
                    success: function (regions) {
                        $.each(regions, function (i, region) {
                            regionList.append($('<option></option>').attr('value', region.id).text(region.name));
                        });
                    },
                    error: function () {
                        alert("Something Went Wrong!");
                    }
                });
            }
            // else {
            //     $('#regionListContainer').attr('hidden', 'hidden');
            // }
        });


        function SubmitData(btn) {
            $(btn).attr('disabled', true);

            const DoubleRegEx = new RegExp("^[1-9][0-9]*([\.][0-9][0-9]{0,2})?$|^$|^\s*$");

            var name = $("#Name").val();
            if (name.trim() == "") {
                toastr.error('يجب عليك ادخال اسم العقار');
                $(btn).attr('disabled', false);

                return;
            }

            var estateTypeId = $("#EstateTypeId").val();
            if (estateTypeId == null) {
                toastr.error('يجب عليك اختيار نوع العقار');
                $(btn).attr('disabled', false);

                return;
            }

            var cityId = $("#CityId").val();
            if (cityId == null) {
                toastr.error('يجب عليك اختيار المدينة');
                $(btn).attr('disabled', false);

                return;
            }

            var regionId = $("#RegionId").val();
            if (isNaN(regionId)) {
                toastr.error('يجب عليك اختيار الحي');
                $(btn).attr('disabled', false);

                return;
            }

            var location = $("#location").val();
            if (location.trim() == '') {
                toastr.error('يجب عليك ادخال الموقع');
                $(btn).attr('disabled', false);

                return;
            }
            var lat = $("#Lat").val();
            var lng = $("#Lng").val();

            var estateArea = $("#Area").val();
            if (estateArea.trim() == '') {
                toastr.error('يجب عليك ادخال مساحة العقار');
                $(btn).attr('disabled', false);

                return;
            }
            if (!DoubleRegEx.test(estateArea)) {
                toastr.error("من فضلك ادخل مساحة العقار بشكل صحيح");
                $(btn).attr('disabled', false);

                return;
            }

            var isDevelopable = $("#IsDevelopable").val();
            if (isDevelopable == null) {
                toastr.error('يجب تحديد قابلية العقار للتطوير');
                $(btn).attr('disabled', false);

                return;
            }

            var description = $("#Description").val();
            if (description.trim() == '') {
                toastr.error('يجب عليك ادخال وصف العقار');
                $(btn).attr('disabled', false);

                return;
            }

            var features = $("#Features").val();
            if (features.trim() == '') {
                toastr.error('يجب عليك ادخال مميزات العقار');
                $(btn).attr('disabled', false);

                return;
            }

            var price = $("#Price").val();
            if (price.trim() == '') {
                toastr.error('يجب عليك ادخال سعر العقار');
                $(btn).attr('disabled', false);

                return;
            }
            if (DoubleRegEx.test(price) == false) {
                toastr.error("من فضلك ادخل سعر العقار بشكل صحيح");
                $(btn).attr('disabled', false);

                return;
            }


            var formData = new FormData();

            var images = $(":file");
            if (images.length >= 2) {
                /*  toastr.error('يجب عليك اختيار صورة واحدة علي الاقل');
                 return; */
                for (var i = 1; i < images.length; i++) {
                    formData.append('Images', images[i].files[0]);
                }
            }

            formData.append('Id', @Model.Id);
            formData.append('Name', name);
            formData.append('EstateTypeId', estateTypeId);
            formData.append('CityId', cityId);
            formData.append('RegionId', regionId);
            formData.append('Location', location);
            formData.append('Lat', lat);
            formData.append('Lng', lng);
            formData.append('Area', estateArea);
            formData.append('IsDevelopable', isDevelopable);
            formData.append('Description', description);
            formData.append('Features', features);
            formData.append('Price', price);

            /* $('#submit-btn').prop('disabled', true); */
            $.ajax({
                url: "/Estates/UpdateEntertainmentRentEstate",
                type: "POST",
                enctype: 'multipart/form-data',
                processData: false,
                contentType: false,
                data: formData,
                success: function (result) {
                    if (result.isSuccess) {
                        toastr.success(result.message)
                        setInterval(function () { window.location.href = "/Estates/ContinueEditMoreSpecs?category=Entertainment" + "&estateId=" + result.id }, 2000);
                    }
                    else {
                        /* $('#submit-btn').prop('disabled', false); */
                        $(btn).attr('disabled', false);

                        toastr.error(result.message)
                    }
                },
                failure: function (info) {
                    toastr.error('حدث خطأ ما');
                    $(btn).attr('disabled', false);

                }
            });
        }

    </script>
}